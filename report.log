2023-11-01 18:07:55,887 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 18:12:08,060 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 18:12:11,242 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 18:14:51,128 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 18:15:55,849 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 21:53:16,677 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 21:53:16,761 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -6.0, best pos: [62.69066383]
2023-11-01 21:53:31,183 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 21:53:31,264 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [1.90295126]
2023-11-01 21:55:15,873 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 21:55:15,954 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 3.0, best pos: [18.47742324]
2023-11-01 21:55:19,714 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 21:55:19,797 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 3.0, best pos: [37.72667332]
2023-11-01 22:11:43,688 - pyswarms.backend.generators - ERROR - generate_swarm() takes an int for n_particles and dimensions and an array for bounds
Traceback (most recent call last):
  File "C:\Users\mikig\PycharmProjects\pythonProject1\venv\Lib\site-packages\pyswarms\backend\generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ^^^^^^^^^^^^^^^^^^
  File "numpy\\random\\mtrand.pyx", line 1148, in numpy.random.mtrand.RandomState.uniform
TypeError: Cannot cast array data from dtype('O') to dtype('float64') according to the rule 'safe'
2023-11-01 22:12:30,888 - pyswarms.backend.generators - ERROR - generate_swarm() takes an int for n_particles and dimensions and an array for bounds
Traceback (most recent call last):
  File "C:\Users\mikig\PycharmProjects\pythonProject1\venv\Lib\site-packages\pyswarms\backend\generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ^^^^^^^^^^^^^^^^^^
  File "numpy\\random\\mtrand.pyx", line 1148, in numpy.random.mtrand.RandomState.uniform
TypeError: Cannot cast array data from dtype('O') to dtype('float64') according to the rule 'safe'
2023-11-01 22:14:36,064 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 22:14:36,322 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.80967314]
2023-11-01 22:15:16,780 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 22:15:17,034 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.39819742]
2023-11-01 22:15:18,383 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 22:15:18,637 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.5191971]
2023-11-01 22:15:20,014 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 22:15:20,271 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.66346599]
2023-11-01 22:15:23,519 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 22:15:23,769 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.94919063]
2023-11-01 22:16:15,859 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9}
2023-11-01 22:16:18,316 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.93220022]
2023-11-01 22:16:44,402 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:16:46,870 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.66739678]
2023-11-01 22:17:19,126 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:19:45,358 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:20:06,592 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.39669006]
2023-11-01 22:22:18,513 - pyswarms.backend.generators - ERROR - Bounds and/or init_pos should be of size (42535295865117307932921825928971026432,)
Traceback (most recent call last):
  File "C:\Users\mikig\PycharmProjects\pythonProject1\venv\Lib\site-packages\pyswarms\backend\generators.py", line 81, in generate_swarm
    pos = center * np.random.uniform(
                   ^^^^^^^^^^^^^^^^^^
  File "numpy\\random\\mtrand.pyx", line 1170, in numpy.random.mtrand.RandomState.uniform
  File "_common.pyx", line 600, in numpy.random._common.cont
  File "_common.pyx", line 508, in numpy.random._common.cont_broadcast_2
ValueError: Maximum allowed dimension exceeded
2023-11-01 22:27:11,562 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:27:31,356 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [561.02550884]
2023-11-01 22:38:53,137 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:39:44,388 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:40:15,807 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:40:43,846 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:41:24,283 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:41:30,898 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.03926891 0.1954658  0.181244   0.89323589 0.09405017 0.44513691
 0.13835405 0.58454415 0.44909424 0.97904099 0.87511671 0.88345919
 0.75824964 0.80939253 0.32230803 0.13146152 0.1614188  0.26392148
 0.1295109  0.6051734  0.92010551 0.00480496 0.36078898 0.39045395
 0.18584582 0.60433304 0.2368374  0.3756417  0.43253664 0.69985732
 0.82453785 0.63828338 0.80698019 0.32845512 0.59534973 0.70870401
 0.39764695 0.97278357 0.42190748 0.30491146 0.10080122 0.05797543
 0.70184484 0.43283299 0.31523113 0.35662624 0.87847545 0.61060801
 0.14062962 0.12293194 0.39109012 0.25756465 0.01543071 0.52770256
 0.09883049 0.34481198 0.50464036 0.02460741 0.12379143 0.27668356
 0.27995264 0.71764377 0.48786449 0.09274859 0.10307138 0.62184628
 0.22199921 0.30690917 0.76336522 0.77082377 0.84440371 0.21261518
 0.1366094  0.67345358 0.3383526  0.46918343 0.65498265 0.33490204
 0.86740097 0.3537368  0.38555037 0.37676551 0.44559215 0.90436717
 0.66224498 0.72402531 0.34705666 0.34202187 0.27563892 0.83602022
 0.78732734 0.1013321  0.17026218 0.21356521 0.45897966 0.24725598
 0.77100656 0.36117954 0.20912246 0.82694104 0.78872437 0.95014794
 0.10016445 0.27990068 0.29039563 0.04860478 0.86890995 0.22989357
 0.92319273 0.72231701 0.32649891 0.47059022 0.93957656 0.50526796
 0.2568483  0.68287783 0.10753283 0.75111891 0.63343891 0.21097014
 0.14056869 0.83870674 0.96886036 0.99408626 0.27353915]
2023-11-01 22:41:55,262 - pyswarms.single.global_best - INFO - Optimize for 20 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:42:01,958 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.47962335 0.25611995 0.9782     0.0408796  0.9332539  0.30913812
 0.76869405 0.91611525 0.70372212 0.32895496 0.91151012 0.01034829
 0.31887791 0.14634735 0.89124143 0.88782239 0.07161781 0.20782616
 0.17548759 0.57551016 0.39099433 0.84783634 0.04470436 0.44019074
 0.39206202 0.56495151 0.88907847 0.71513809 0.02017365 0.31312095
 0.40752222 0.37812128 0.0720626  0.63055782 0.13331029 0.49407386
 0.27882128 0.65216145 0.51291176 0.10628378 0.02686214 0.03101782
 0.91254833 0.05888046 0.29158422 0.23839139 0.62575942 0.70721802
 0.36887083 0.05926253 0.82123952 0.86227167 0.79838231 0.73956074
 0.81871789 0.67021854 0.78142353 0.13389076 0.20806499 0.7007364
 0.33934528 0.24088158 0.64716959 0.79813577 0.92500138 0.31589673
 0.03135409 0.62157207 0.32318624 0.01508317 0.60540942 0.58192526
 0.72185369 0.40181441 0.17287656 0.28743597 0.95151996 0.40879407
 0.96224097 0.93158027 0.84693856 0.88914788 0.37762913 0.55084018
 0.00935994 0.67274474 0.75650367 0.76687525 0.45348997 0.97331273
 0.71704505 0.70792116 0.23394182 0.89767298 0.05895202 0.1203638
 0.58189555 0.33489924 0.15163161 0.05711277 0.82696756 0.16682425
 0.78472134 0.16520381 0.66082043 0.76714771 0.12005302 0.22183502
 0.40851453 0.41275516 0.1769022  0.64376389 0.44784373 0.53529138
 0.35247112 0.31423519 0.7632314  0.49139206 0.88611996 0.86567302
 0.63869767 0.848741   0.64877381 0.72782597 0.51511791]
2023-11-01 22:42:45,227 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:43:54,617 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 126.0, best pos: [0.61991282 0.51265008 0.64475181 0.26300699 0.0668045  0.65519067
 0.39163341 0.68662496 0.6892018  0.40454607 0.57647829 0.04854913
 0.19943053 0.11759183 0.26728841 0.37674472 0.27650731 0.46106613
 0.10364693 0.41642309 0.03325655 0.08060564 0.07270434 0.65342534
 0.03555356 0.00539938 0.2639853  0.57171899 0.55715074 0.40485581
 0.04199742 0.26000857 0.53862492 0.49162957 0.06882186 0.69410489
 0.73138099 0.09231997 0.78128288 0.77091206 0.67662567 0.25311989
 0.25658211 0.98979005 0.40415025 0.47750074 0.63100316 0.96996261
 0.93968313 0.77854259 0.65575474 0.40810808 0.72431113 0.34684812
 0.72804731 0.55585783 0.31394821 0.99842386 0.85524191 0.47173339
 0.86026159 0.39213761 0.74342577 0.62214275 0.1681808  0.66597111
 0.98544532 0.9072587  0.42348131 0.28904339 0.01368019 0.92720452
 0.21290349 0.53086041 0.87976192 0.57866247 0.73618097 0.87070461
 0.99611296 0.88459938 0.25928456 0.93314487 0.26454701 0.41296452
 0.53556155 0.07989776 0.35966315 0.28160378 0.8215356  0.8595543
 0.06093837 0.33955427 0.38460809 0.10637485 0.82468579 0.55416148
 0.16026332 0.28092527 0.71182884 0.04553188 0.6385857  0.70991328
 0.38174466 0.86132689 0.93131056 0.38586935 0.5590847  0.9417966
 0.57488746 0.30714319 0.14070341 0.58584627 0.77284988 0.89013091
 0.70680776 0.67914011 0.97151656 0.57149558 0.14064978 0.06974656
 0.13968495 0.18588914 0.57594883 0.09577053 0.04806699]
2023-11-01 22:45:43,036 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:46:04,534 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 23.0, best pos: [0.79517184 0.13763234 0.19627072 0.83781398 0.51556093 0.81957312
 0.59238185 0.5908489  0.39595109 0.70821066 0.5824703  0.5890306
 0.28096631 0.95413386 0.96554617 0.62991147 0.81621812 0.66650487
 0.64865864 0.82467571 0.75447269 0.67302346 0.52856283 0.22033012
 0.63843859 0.52214015 0.80404882 0.75310441]
2023-11-01 22:46:20,618 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:46:33,769 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:46:33,984 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.79326088 0.96148017 0.58427413 0.03019381 0.10027637 0.18993194
 0.05168632 0.63720862 0.87463876 0.30606406 0.71522738 0.6045487
 0.39025391 0.67278527 0.91992468 0.6286627  0.34273718 0.19450622
 0.01130471 0.28707668 0.72307811 0.51982824 0.17569245 0.10197633
 0.3153016  0.89523616 0.54994682 0.13335485]
2023-11-01 22:46:37,550 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:46:37,769 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.6106188  0.13700035 0.86548335 0.34767785 0.70409357 0.37660427
 0.08837312 0.14485247 0.97409349 0.66631295 0.30760007 0.37853307
 0.88363771 0.89218569 0.3493628  0.76543418 0.29528363 0.77626147
 0.73278201 0.01441351 0.12939986 0.48429864 0.00926379 0.17846844
 0.15705525 0.38747595 0.46103912 0.70965376]
2023-11-01 22:46:39,774 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:46:39,989 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.65779711 0.59306285 0.26337263 0.4061823  0.50524068 0.25739938
 0.02294377 0.44453655 0.70669427 0.91384951 0.23185119 0.14881627
 0.07497373 0.16558836 0.38428395 0.27950581 0.83910269 0.89555898
 0.6000607  0.74749639 0.34686428 0.05115422 0.4000024  0.2026713
 0.19481607 0.68621209 0.03346257 0.9880551 ]
2023-11-01 22:46:43,820 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:46:45,905 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.03591565 0.6980328  0.79330692 0.11081554 0.2570745  0.41743399
 0.3790317  0.74335237 0.29658665 0.19888268 0.87703627 0.70483979
 0.4076932  0.51051138 0.43433042 0.30911212 0.58618555 0.25844642
 0.32517855 0.2112303  0.64657587 0.395038   0.90049274 0.78021546
 0.29677792 0.09121759 0.09396156 0.73953694]
2023-11-01 22:46:49,679 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:47:11,340 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 22.0, best pos: [0.80434441 0.75574545 0.80216739 0.78366391 0.82323877 0.65301167
 0.71682241 0.72376772 0.58783286 0.59112859 0.71774081 0.82644581
 0.51531618 0.84425157 0.74642211 0.16648665 0.33991451 0.75585979
 0.27237014 0.42863211 0.35797702 0.77989574 0.99171955 0.97650205
 0.85148444 0.72762045 0.87989933 0.42486949]
2023-11-01 22:47:43,981 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:48:06,028 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 21.0, best pos: [0.74864923 0.79608477 0.53190924 0.42787276 0.23357381 0.27575051
 0.56951401 0.69787301 0.60587862 0.05687047 0.6896115  0.65244808
 0.67136698 0.35412155 0.5419671  0.76411508 0.78578188 0.72068066
 0.40180105 0.57000015 0.53469186 0.5733899  0.73662034 0.89894072
 0.42111524 0.51007125 0.61856407 0.50384866]
2023-11-01 22:50:46,583 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 22:51:08,018 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 22.0, best pos: [0.54607114 0.61134287 0.64273937 0.71902595 0.77303872 0.51036937
 0.51034553 0.69141652 0.59765778 0.5921035  0.61375233 0.65483085
 0.95056779 0.71954499 0.70164056 0.51249708 0.64441466 0.58114561
 0.92913617 0.53804306 0.6523387  0.00862051 0.37897485 0.55107056
 0.26779382 0.38271961 0.05197007 0.24219283]
2023-11-01 22:55:14,188 - pyswarms.single.global_best - INFO - Optimize for 200000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:00:52,200 - pyswarms.single.global_best - INFO - Optimize for 200000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:03:32,995 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:04:14,853 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 71.0, best pos: [0.09655268 0.45539858 0.31759287 0.85844734 0.32832002 0.91772036
 0.16908916 0.56872956 0.71887333 0.41503706 0.93992493 0.87973857
 0.3514926  0.21069122 0.94743447 0.32387257 0.95252244 0.13921552
 0.28219382 0.36487932 0.15913947 0.23370335 0.08669057 0.67654729
 0.86793655 0.95690547 0.00374135 0.92467301 0.18424761 0.64068585
 0.01277001 0.14330272 0.82039817 0.97502247 0.8904593  0.90061717
 0.95660462 0.85519706 0.97197198 0.90406666 0.44761687 0.71700132
 0.14709644 0.32354487 0.14450575 0.13333805 0.78201983 0.20589582
 0.23263601 0.75533896 0.30813983 0.92963998 0.74552173 0.07439843
 0.14221598 0.97276361 0.489015   0.5078835  0.48684252 0.3330056
 0.84881601 0.04190234 0.54868998 0.72764405 0.2043615  0.4762936
 0.61909754 0.76190014 0.15179547 0.41613945]
2023-11-01 23:04:42,889 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 0.02, 'c2': 0.02, 'w': 0.07}
2023-11-01 23:05:18,640 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 71.0, best pos: [0.08633431 0.98823916 0.04194638 0.83268462 0.50411291 0.84197405
 0.5451059  0.31810644 0.30948962 0.2388044  0.01136815 0.65092092
 0.24456472 0.44988871 0.13633373 0.45591013 0.67066379 0.08749472
 0.01924388 0.55785609 0.65379131 0.84849199 0.52175856 0.97178185
 0.41969532 0.82839425 0.56907554 0.16311792 0.88731025 0.53161296
 0.51112457 0.21832418 0.02377619 0.89415486 0.76490957 0.15218248
 0.2258881  0.68524962 0.21221035 0.41346429 0.35703772 0.32923678
 0.44417448 0.3485247  0.80219233 0.97739896 0.74813397 0.22723555
 0.258302   0.13483578 0.92653898 0.63762275 0.35587216 0.29001042
 0.82075582 0.02388112 0.61434529 0.27106254 0.44271764 0.70443458
 0.25402269 0.77282987 0.99923307 0.09819223 0.42757996 0.26353983
 0.00726067 0.35227376 0.6978238  0.63798605]
2023-11-01 23:05:33,755 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 0.02, 'c2': 0.02, 'w': 0.07}
2023-11-01 23:05:51,577 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.1481618  0.89991677 0.55967415 0.41385065 0.96283209 0.93846173
 0.92079408 0.05485867 0.78565875 0.9160238  0.47820712 0.47361938
 0.18406679 0.6861396  0.62189611 0.54267318 0.12201686 0.46501979
 0.50659326 0.4879354  0.37329302 0.98245771 0.37776415 0.44545448
 0.09567826 0.57713745 0.37503435 0.23753637]
2023-11-01 23:05:57,143 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 0.02, 'c2': 0.02, 'w': 0.07}
2023-11-01 23:06:12,278 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 0.2, 'c2': 0.2, 'w': 0.07}
2023-11-01 23:06:32,247 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:06:53,028 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 23.0, best pos: [0.60428    0.82112168 0.82962937 0.61275296 0.50277596 0.89139398
 0.71984883 0.61411868 0.99911654 0.96380705 0.5224381  0.56747176
 0.50712564 0.50094095 0.70712    0.61932073 0.6532419  0.9541562
 0.56290044 0.85951638 0.54005683 0.76294322 0.35437979 0.29050758
 0.59403745 0.30445326 0.46472887 0.19048317]
2023-11-01 23:07:30,053 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:07:51,153 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 21.0, best pos: [0.53414416 0.90027937 0.69429967 0.60879971 0.54781247 0.62260319
 0.37153092 0.11307565 0.35164058 0.03910833 0.7687728  0.58374449
 0.74663142 0.61778317 0.03799656 0.73935221 0.59502811 0.59025515
 0.77269125 0.42451218 0.70323989 0.73362016 0.84716784 0.82619241
 0.62238097 0.38359917 0.7754178  0.5170643 ]
2023-11-01 23:14:19,900 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:14:49,249 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 46.0, best pos: [0.74696495 0.91127196 0.0071625  0.33032888 0.3940247  0.77218872
 0.80413829 0.44193801 0.64125432 0.99880459 0.82279411 0.62393863
 0.39184414 0.30281558 0.05649344 0.92383084 0.76105746 0.24470387
 0.82974614 0.21459036 0.10258702 0.77783899 0.65409206 0.46791468
 0.99596455 0.52667519 0.48003712 0.35945071 0.24474929 0.86270964
 0.62578754 0.28705998 0.88613554 0.80823763 0.71805676 0.3805524
 0.61617459 0.71473029 0.99955944 0.78045915 0.70259877 0.22109616
 0.89466768 0.00992675 0.99428795]
2023-11-01 23:14:59,317 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 4, 'c2': 4, 'w': 0.7}
2023-11-01 23:15:14,991 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 4, 'c2': 4, 'w': 0.7}
2023-11-01 23:17:48,446 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 4, 'c2': 4, 'w': 0.7}
2023-11-01 23:19:22,216 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 4, 'c2': 4, 'w': 0.7}
2023-11-01 23:19:43,376 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 22.0, best pos: [0.23001358 0.30594579 0.57257559 0.36929138 0.77236901 0.78373837
 0.30327717 0.914119   0.88047824 0.63446059 0.90818936 0.7901675
 0.98089754 0.85192984 0.76432589 0.48603313 0.5952387  0.70796416
 0.86356308 0.6338106  0.92647148 0.45280942 0.71082136 0.62809005
 0.57007135 0.64659956 0.68559453 0.69878205]
2023-11-01 23:37:59,330 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 4, 'c2': 4, 'w': 0.7}
2023-11-01 23:38:21,039 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 22.0, best pos: [0.81854042 0.93594221 0.70694656 0.87641368 0.60854392 0.89287189
 0.62886455 0.7139219  0.67296239 0.81393309 0.13232783 0.43562035
 0.03022421 0.47114276 0.67330557 0.74987423 0.91471834 0.58793791
 0.958313   0.82270748 0.30226742 0.90891301 0.92021747 0.71761949
 0.74461614 0.80865093 0.46579012 0.91352862]
2023-11-01 23:38:36,579 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:39:18,112 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 71.0, best pos: [0.20273864 0.80708352 0.80238766 0.40608794 0.23093386 0.6554846
 0.74604952 0.42877748 0.12910702 0.14406077 0.10277772 0.04496902
 0.19536246 0.86229276 0.03521893 0.66445523 0.47248932 0.39606558
 0.70785861 0.17752991 0.16275551 0.15566251 0.14750367 0.47149806
 0.94345905 0.89856252 0.40325315 0.25184638 0.04573667 0.20168179
 0.98568981 0.42591673 0.46248656 0.86347167 0.08114434 0.46864487
 0.93219614 0.11429897 0.57578239 0.74159696 0.18578175 0.93827147
 0.11390379 0.88712874 0.41591302 0.3435034  0.72899415 0.73456137
 0.75227945 0.03765294 0.00510903 0.67342477 0.20152818 0.65975415
 0.04953482 0.34576248 0.35224119 0.74923341 0.16596049 0.57377478
 0.92218422 0.81926634 0.79783084 0.71510143 0.86346217 0.04928527
 0.95712276 0.129364   0.38021568 0.9486826 ]
2023-11-01 23:39:25,284 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:42:57,181 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:52:37,414 - pyswarms.single.global_best - INFO - Optimize for 200 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:52:37,633 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [6.74281889e-01 1.11375149e-01 1.35030979e-01 5.66213219e-01
 3.10592610e-01 6.11243234e-01 6.55768277e-01 1.50820717e-01
 1.87976170e-01 4.40771653e-01 8.86748396e-01 1.69343486e-01
 7.46650644e-02 4.78271268e-02 2.09201022e-01 2.66949503e-01
 1.49573508e-01 3.21894521e-01 4.45817600e-01 7.10508725e-01
 9.43256824e-01 1.38203317e-04 2.84346165e-01 1.83622500e-01
 7.67408602e-01 8.36961262e-01 8.21382139e-01 7.65224777e-01]
2023-11-01 23:52:45,774 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:52:47,826 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 22.0, best pos: [0.76457916 0.63906616 0.65272044 0.12434666 0.02366383 0.43941313
 0.51926969 0.51807636 0.55764648 0.7206383  0.65654368 0.84594196
 0.73471067 0.42262944 0.938883   0.92277571 0.98337839 0.67431902
 0.1740191  0.53951953 0.60064593 0.71756932 0.55617656 0.78039953
 0.0459335  0.97102231 0.98236803 0.9986831 ]
2023-11-01 23:53:09,719 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.5}
2023-11-01 23:53:11,708 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 24.0, best pos: [0.43693248 0.8608857  0.66066254 0.63444997 0.33231332 0.68372038
 0.51250498 0.35128744 0.81118276 0.51473508 0.60483599 0.67847103
 0.66203017 0.8120282  0.51987589 0.56546316 0.152094   0.59821561
 0.65908398 0.88785672 0.72995419 0.51274216 0.69045635 0.50011741
 0.57672526 0.60722984 0.71961317 0.73564499]
2023-11-01 23:53:15,760 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 1}
2023-11-01 23:53:17,895 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 25.0, best pos: [0.78412346 0.52112507 0.74595776 0.48220166 0.91308253 0.62586657
 0.65677143 0.70223845 0.88863986 0.20266145 0.68877977 0.89888159
 0.97171554 0.11642421 0.91815364 0.89790982 0.80256322 0.86864848
 0.68486331 0.65662258 0.73641981 0.76893199 0.65341223 0.63492906
 0.82438596 0.70366696 0.69601065 0.54083686]
2023-11-01 23:53:22,667 - pyswarms.single.global_best - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:53:24,704 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.06026829 0.18094031 0.5150144  0.22678176 0.54329503 0.60624252
 0.06609885 0.29249851 0.79681537 0.35713034 0.39608368 0.03649015
 0.45699797 0.85368627 0.34993265 0.73345772 0.78036642 0.45423688
 0.34871446 0.09976668 0.99022731 0.79684631 0.6959585  0.51057131
 0.97889778 0.24476576 0.12751626 0.45093233]
2023-11-01 23:53:31,277 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-01 23:53:52,582 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 22.0, best pos: [0.69193388 0.69749877 0.86908111 0.66628657 0.5455481  0.58529709
 0.80559079 0.63499119 0.59462155 0.78501928 0.81708101 0.53194525
 0.7908829  0.62736305 0.65505705 0.50890176 0.95929152 0.57752423
 0.68831178 0.83159755 0.98696734 0.37592651 0.34690794 0.07827356
 0.8728592  0.38220796 0.21734039 0.43543086]
2023-11-01 23:53:57,852 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-01 23:54:27,228 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7}
2023-11-01 23:54:39,916 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7}
2023-11-01 23:54:52,344 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7}
2023-11-03 18:31:29,391 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:34:25,155 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:38:51,703 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:40:59,860 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:41:27,873 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 21.0, best pos: [1 1 1 1 1 1 0 0 0 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 1 1]
2023-11-03 18:42:32,355 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:49:44,975 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:51:17,705 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:53:40,085 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:55:31,883 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:57:23,397 - pyswarms.discrete.binary - INFO - Optimize for 5000 iters with {'c1': 1, 'c2': 1, 'w': 0.7, 'k': 2, 'p': 1}
2023-11-03 18:57:43,746 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 0.007518796992481203, best pos: [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 1 1 0 1]
2023-11-03 18:59:48,077 - pyswarms.single.global_best - INFO - Optimize for 5000 iters with {'c1': 1, 'c2': 1, 'w': 0.7}
2023-11-03 18:59:53,972 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.017857142857142856, best pos: [0.50543335 0.60915341 0.61305584 0.50893161 0.71692142 0.82296711
 0.61901957 0.55133384 0.81309477 0.94867286 0.54636096 0.23167383
 0.60838676 0.8377295  0.55627263 0.70704351 0.73466976 0.59543212
 0.58615086 0.78492375 0.55270029 0.5890064  0.64899254 0.58375409
 0.62063534 0.67754391 0.62387372 0.08582155]
2023-11-03 19:00:14,277 - pyswarms.single.global_best - INFO - Optimize for 10000 iters with {'c1': 1, 'c2': 1, 'w': 0.7}
2023-11-03 19:00:24,706 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.017857142857142856, best pos: [0.5958021  0.72180943 0.33281042 0.51625148 0.57602119 0.58473693
 0.77036082 0.76739538 0.75380951 0.511238   0.7669754  0.60155246
 0.7254312  0.75204337 0.58326713 0.79656469 0.54818323 0.76743489
 0.53319168 0.54107416 0.62288408 0.95749768 0.59929345 0.75757567
 0.77667685 0.70911274 0.27487633 0.64358712]
2023-11-03 19:01:02,743 - pyswarms.single.global_best - INFO - Optimize for 10000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:01:13,476 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.017857142857142856, best pos: [0.60378969 0.90761313 0.75392256 0.81910076 0.59275307 0.81489227
 0.61185807 0.54753667 0.79056068 0.54490488 0.71383695 0.13997939
 0.65246787 0.60115628 0.65336127 0.33820808 0.51551267 0.60001496
 0.71065247 0.85405516 0.74830352 0.5927387  0.62913782 0.63354041
 0.59407361 0.95647983 0.504674   0.81823097]
2023-11-03 19:01:54,832 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:02:16,966 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.017857142857142856, best pos: [0.81663369 0.65870802 0.02589618 0.61050166 0.55143332 0.57065214
 0.62402847 0.61256958 0.68870567 0.63975668 0.63315224 0.94508007
 0.88623614 0.74504855 0.70055055 0.53134067 0.89191663 0.50378086
 0.66549773 0.58947113 0.50321003 0.7251601  0.71129215 0.61100387
 0.5470689  0.5430657  0.1097844  0.9302803 ]
2023-11-03 19:05:08,301 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:05:28,561 - pyswarms.single.global_best - INFO - Optimization finished | best cost: -0.03333333333333333, best pos: [0.37518637 0.0182236  0.05401384 0.38195897 0.47736542 0.36223817
 0.42563098 0.29477427 0.09237986 0.40365596 0.36986659 0.38216457
 0.37059182 0.22479695 0.18548193 0.3073009  0.39712653 0.28037976
 0.46522868 0.42679174 0.4359198  0.38436357 0.27719116 0.42349614
 0.37608453 0.37919273 0.40811572 0.30751712]
2023-11-03 19:06:36,299 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:06:56,329 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 28.0, best pos: [0.23680377 0.45052083 0.4997941  0.37125176 0.45761559 0.14979947
 0.37153037 0.46757472 0.28569883 0.3371541  0.25365794 0.13594342
 0.40759205 0.30524058 0.26060512 0.48405853 0.39650817 0.37598646
 0.45246063 0.08214438 0.39470495 0.46218152 0.27754893 0.19370406
 0.15299987 0.360519   0.23497964 0.4367315 ]
2023-11-03 19:07:30,613 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:07:51,904 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 22.0, best pos: [0.69736367 0.95815564 0.78518249 0.76898992 0.63153681 0.71854317
 0.67622867 0.63980906 0.92644605 0.7147462  0.90798981 0.59130888
 0.64315547 0.55984972 0.68270862 0.64039573 0.6133644  0.67364929
 0.77700754 0.72859007 0.95654158 0.3503769  0.48433364 0.34163438
 0.04752333 0.22682391 0.7063733  0.12472656]
2023-11-03 19:08:05,674 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:08:48,109 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 71.0, best pos: [0.52133113 0.19926643 0.22369496 0.81283817 0.0783284  0.86900217
 0.12894698 0.9315284  0.8660338  0.42076831 0.67001106 0.98464674
 0.42632689 0.24969102 0.01384157 0.53214749 0.17609263 0.23680737
 0.94015743 0.04966226 0.04500251 0.02887451 0.99896521 0.28115543
 0.10275137 0.08316877 0.60443956 0.09121355 0.14047912 0.9216289
 0.90812194 0.98043004 0.44888131 0.06450225 0.48074827 0.30006335
 0.63526861 0.11491468 0.83693255 0.35863611 0.44314905 0.38703678
 0.02907328 0.3352735  0.84412556 0.28355986 0.81457484 0.89734135
 0.54285478 0.85348852 0.5816295  0.50307114 0.64302966 0.53443295
 0.80423767 0.73153402 0.40380881 0.5160902  0.67024425 0.39657858
 0.3297355  0.98664779 0.59911885 0.56021978 0.85236957 0.06239078
 0.60239843 0.92838533 0.34947089 0.60827931]
2023-11-03 19:09:36,138 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:16:29,942 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 71.0, best pos: [0.89587929 0.10913066 0.08615362 0.61456845 0.81544311 0.96094143
 0.33507123 0.85570726 0.74508715 0.22907191 0.78135561 0.46691213
 0.53909291 0.01107406 0.7941302  0.03485179 0.53277871 0.18695898
 0.29184321 0.5924033  0.14404698 0.35585859 0.37270056 0.56563686
 0.26808441 0.47434597 0.50799963 0.15705936 0.65918239 0.63136497
 0.1286121  0.06772663 0.79086117 0.48258602 0.32893752 0.74149449
 0.98405452 0.7232907  0.00229253 0.53582271 0.67286899 0.73404588
 0.04392686 0.13348371 0.8318521  0.90027634 0.57735716 0.55999724
 0.03569979 0.83464293 0.6383234  0.38065842 0.99716603 0.89335047
 0.70585618 0.28629239 0.98242102 0.90024094 0.87102388 0.429778
 0.23678516 0.68084356 0.71015596 0.18452874 0.32872959 0.91415924
 0.75191664 0.28489159 0.91737781 0.17437049]
2023-11-03 19:18:18,197 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:19:47,237 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:20:09,219 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 21.0, best pos: [0.59607464 0.58857334 0.63415618 0.01497472 0.30155509 0.32957298
 0.96824892 0.64445307 0.8530733  0.34237078 0.97989558 0.57462702
 0.66093842 0.36861368 0.56422594 0.707103   0.52310215 0.50595349
 0.01263265 0.94494937 0.9638629  0.66707702 0.50795816 0.63107619
 0.42975524 0.85489233 0.73257779 0.61357995]
2023-11-03 19:30:31,747 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 2, 'c2': 2, 'w': 0.7}
2023-11-03 19:30:31,938 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.83120032 0.63841501 0.22415921 0.45887273 0.32334586 0.72893806
 0.64928527 0.05475618 0.64371526 0.7234737  0.5843025  0.90572109
 0.44047252 0.76057951 0.39568139 0.92682366 0.00294959 0.64632073
 0.05505159 0.63337918 0.55811835 0.4826649  0.39022978 0.69696887
 0.58394493 0.68802848 0.03708313 0.3159373 ]
2023-11-03 19:48:44,881 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 19:48:45,081 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 24.0, best pos: [0.7399203  0.75133378 0.65205947 0.71605646 0.57383013 0.83006671
 0.02942706 0.07298625 0.23171665 0.58809127 0.76945683 0.94225405
 0.9632845  0.53797483 0.66519063 0.99534791 0.75116326 0.89285365
 0.83728977 0.83807477 0.64270224 0.57890379 0.85193877 0.94405954
 0.61993128 0.36957186 0.6969258  0.59702937]
2023-11-03 19:48:50,206 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 19:48:50,406 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.06969042 0.75701161 0.55297779 0.86932503 0.24262975 0.27543059
 0.91412894 0.22783226 0.08366946 0.30761232 0.01382344 0.4413922
 0.99334699 0.61833794 0.26008651 0.02389024 0.49347634 0.40160487
 0.73464055 0.50424535 0.68584239 0.95093408 0.58175006 0.43963022
 0.38129525 0.34602927 0.38251664 0.29175903]
2023-11-03 19:48:52,219 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 19:48:52,417 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.77241779 0.43586797 0.23083247 0.37104703 0.91491474 0.62405317
 0.23610181 0.70662097 0.05733773 0.98709192 0.78195881 0.91333609
 0.62194814 0.23767894 0.79284827 0.1150203  0.42871855 0.99116836
 0.19231935 0.53470346 0.93657604 0.01586118 0.78247858 0.94825881
 0.20444025 0.229215   0.18938738 0.45673816]
2023-11-03 19:48:53,931 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 19:48:54,132 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.06290379 0.02348753 0.15875966 0.22231228 0.39024767 0.45952019
 0.68243506 0.52898247 0.12707339 0.17611199 0.92213066 0.4456046
 0.48667694 0.28866722 0.78488725 0.05899228 0.22493045 0.41982516
 0.31184993 0.83007364 0.74680098 0.80938438 0.86264541 0.40719435
 0.76169316 0.70562    0.88632435 0.12002966]
2023-11-03 19:48:55,241 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 19:48:55,439 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 29.0, best pos: [0.56953095 0.7290729  0.16770826 0.51707901 0.81778814 0.13767358
 0.44889843 0.99484922 0.2186977  0.73226361 0.38417058 0.65212621
 0.38127558 0.78468952 0.1790135  0.06515747 0.6684482  0.68902886
 0.0618939  0.90494167 0.79966482 0.91239556 0.15276033 0.04875151
 0.90645635 0.86641256 0.23114798 0.25420375]
2023-11-03 19:57:31,748 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 19:57:32,131 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 30.0, best pos: [0.84722377 0.47238422 0.62548161 0.94229659 0.80212191 0.10703656
 0.69694456 0.83796683 0.69473389 0.61123451 0.78890436 0.54920518
 0.82582659 0.67152047 0.64481269 0.64653297 0.9252237  0.60870937
 0.95882621 0.73612753 0.72854988 0.25507311 0.50449681 0.66931733
 0.05240219 0.66566564 0.78716125 0.51935815]
2023-11-03 19:57:57,968 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 19:58:01,754 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 30.0, best pos: [0.78862455 0.61338744 0.79359037 0.73116551 0.99743607 0.7546158
 0.15267863 0.77091292 0.41179896 0.18392311 0.89182397 0.97568516
 0.92131708 0.57728449 0.63726851 0.83460725 0.56063848 0.43563661
 0.91650703 0.53577443 0.8348342  0.53130463 0.97787062 0.61720649
 0.96961379 0.92899198 0.52765337 0.53197209]
2023-11-03 19:58:18,144 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 19:59:28,948 - pyswarms.single.global_best - INFO - Optimize for 1000 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 19:59:32,725 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 24.0, best pos: [0.73699355 0.65554559 0.79118209 0.73223333 0.99040478 0.02243709
 0.63083303 0.88412817 0.7405595  0.94816456 0.82477383 0.67438319
 0.13856922 0.89356482 0.678724   0.57582952 0.75563985 0.43515418
 0.56423422 0.53572987 0.73923593 0.92351058 0.94080163 0.12646787
 0.68663996 0.69657971 0.80287349 0.82391293]
2023-11-03 19:59:42,101 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 20:00:58,268 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 24.0, best pos: [0.88234269 0.4036785  0.28205769 0.88088671 0.65866941 0.79661286
 0.63452006 0.67440214 0.75349993 0.78693554 0.77949692 0.86308868
 0.0968866  0.57857643 0.50057189 0.89494782 0.75539035 0.45227997
 0.66615721 0.85940641 0.54908571 0.60529413 0.66939795 0.82697719
 0.99444382 0.75291075 0.71976034 0.51846805]
2023-11-03 20:01:09,359 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 20:08:05,393 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 138.0, best pos: [0.8805504  0.60530643 0.92120389 0.97538317 0.50899819 0.33257216
 0.05785756 0.56880214 0.64572688 0.72689854 0.90574467 0.5396647
 0.69401283 0.19117015 0.99903646 0.56375577 0.70176423 0.83317525
 0.9522065  0.89829398 0.81962696 0.89387893 0.23584397 0.96703713
 0.80924275 0.65213782 0.73499227 0.86096366 0.87047687 0.86079897
 0.58101779 0.55320361 0.6356344  0.46783877 0.55359638 0.85616311
 0.21874834 0.07087225 0.94421341 0.35219685 0.05738399 0.84436502
 0.03735677 0.52367824 0.69938843 0.91581071 0.29578796 0.96918529
 0.78870114 0.51997504 0.95681601 0.65517077 0.80829157 0.94881696
 0.14060879 0.76754228 0.64309907 0.69777185 0.67840543 0.68012176
 0.89903383 0.34106559 0.07868719 0.56687183 0.70543279 0.98275731
 0.99618594 0.66484217 0.88021546 0.85065863]
2023-11-03 20:12:46,372 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 20:13:17,339 - pyswarms.single.global_best - INFO - Optimize for 20000 iters with {'c1': 3, 'c2': 3, 'w': 0.7}
2023-11-03 20:14:52,339 - pyswarms.discrete.binary - INFO - Optimize for 20000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:29:57,190 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:30:07,696 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:31:20,596 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:32:13,824 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:32:21,706 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:34:35,816 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:35:02,340 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:35:13,582 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:36:29,397 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 70.0, best pos: [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
2023-11-03 20:36:33,400 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 3, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:36:55,457 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:37:14,953 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 10, 'c2': 10, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:37:28,864 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 10, 'c2': 10, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 20:38:43,335 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 68.0, best pos: [1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
2023-11-03 20:38:51,058 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 10, 'c2': 10, 'w': 0.5, 'k': 1, 'p': 1}
2023-11-03 20:40:07,392 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 70.0, best pos: [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
2023-11-03 20:55:20,515 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 300, 'c2': 300, 'w': 0.5, 'k': 1, 'p': 1}
2023-11-03 20:56:29,717 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 1, 'w': 0.5, 'k': 1, 'p': 1}
2023-11-03 20:56:55,835 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 4, 'c2': 2, 'w': 0.5, 'k': 1, 'p': 1}
2023-11-03 20:58:13,217 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 70.0, best pos: [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
2023-11-03 20:58:16,459 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 4, 'c2': 2, 'w': 0.5, 'k': 1, 'p': 1}
2023-11-03 20:58:55,770 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 4, 'c2': 2, 'w': 0.01, 'k': 1, 'p': 1}
2023-11-03 20:59:15,687 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 2, 'w': 0.01, 'k': 1, 'p': 1}
2023-11-03 21:00:35,079 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 70.0, best pos: [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
2023-11-03 21:08:09,556 - pyswarms.discrete.binary - INFO - Optimize for 100 iters with {'c1': 3, 'c2': 2, 'w': 0.01, 'k': 1, 'p': 1}
2023-11-03 21:08:13,580 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 70.0, best pos: [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
2023-11-03 21:08:29,377 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 3, 'c2': 2, 'w': 0.01, 'k': 1, 'p': 1}
2023-11-03 21:09:49,185 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 70.0, best pos: [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]
2023-11-03 21:14:19,025 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 4, 'w': 0.01, 'k': 1, 'p': 1}
2023-11-03 21:14:49,003 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 4, 'w': 0.01, 'k': 1, 'p': 1}
2023-11-03 21:15:03,914 - pyswarms.discrete.binary - INFO - Optimize for 2000 iters with {'c1': 2, 'c2': 2, 'w': 0.7, 'k': 1, 'p': 1}
2023-11-03 21:15:49,781 - pyswarms.discrete.binary - INFO - Optimization finished | best cost: 43.0, best pos: [1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
 1 1 1 1 1 1 1 1]
